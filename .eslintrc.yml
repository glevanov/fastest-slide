env:
  node: true
parser:
  "@typescript-eslint/parser"
extends:
  - eslint:recommended
  - plugin:import/errors
  - plugin:import/warnings
  - plugin:import/recommended
  - plugin:import/typescript
  - plugin:@typescript-eslint/recommended
  - plugin:@typescript-eslint/eslint-recommended
  - plugin:@typescript-eslint/recommended
rules:
  # style
  semi: off
  '@typescript-eslint/semi': [ error, always ]
  quotes: off
  '@typescript-eslint/quotes': [ error, single ]
  comma-dangle: off
  '@typescript-eslint/comma-dangle': [ error, always-multiline ]
  arrow-parens: [ error, always ]
  indent: off
  '@typescript-eslint/indent': [ error, tab ]
  brace-style: 'off'
  "@typescript-eslint/brace-style": [ error, 1tbs ]
  curly: [ error, multi-line ]
  object-curly-spacing: off
  '@typescript-eslint/object-curly-spacing': [ error, always ]
  block-spacing: error
  space-before-blocks: off
  '@typescript-eslint/space-before-blocks': error
  no-multi-spaces: error
  no-multiple-empty-lines:
    - error
    - max: 1

  # imports
  import/no-unresolved: error
  import/order:
    - error
    - newlines-between: always
  import/no-default-export: warn

  # typescript
  '@typescript-eslint/explicit-member-accessibility': off
  '@typescript-eslint/explicit-function-return-type': off
  '@typescript-eslint/ban-ts-ignore': off
  '@typescript-eslint/prefer-ts-expect-error': error
  '@typescript-eslint/ban-ts-comment': warn
  '@typescript-eslint/explicit-module-boundary-types': off
  '@typescript-eslint/member-delimiter-style':
    - error
    - multiline:
        delimiter: none
  '@typescript-eslint/no-empty-function': off
  '@typescript-eslint/no-unused-vars': warn